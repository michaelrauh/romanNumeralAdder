#include "roman.h"

#test romanToArabicBasicConversionTest
  ck_assert_int_eq(roman_to_arabic("I"), 1);
  ck_assert_int_eq(roman_to_arabic("V"), 5);
  ck_assert_int_eq(roman_to_arabic("X"), 10);
  ck_assert_int_eq(roman_to_arabic("L"), 50);
  ck_assert_int_eq(roman_to_arabic("C"), 100);
  ck_assert_int_eq(roman_to_arabic("D"), 500);
  ck_assert_int_eq(roman_to_arabic("M"), 1000);
  ck_assert_int_eq(roman_to_arabic("N"), ERROR);
  ck_assert_int_eq(roman_to_arabic(""), ERROR);

#test romanToArabicAddingTest
  ck_assert_int_eq(roman_to_arabic("II"), 2);
  ck_assert_int_eq(roman_to_arabic("III"), 3);
  ck_assert_int_eq(roman_to_arabic("VI"), 6);
  ck_assert_int_eq(roman_to_arabic("VII"), 7);
  ck_assert_int_eq(roman_to_arabic("XII"), 12);
  ck_assert_int_eq(roman_to_arabic("MXI"), 1011);

#test romanToArabicSubtractTest
  ck_assert_int_eq(roman_to_arabic("IV"), 4);

#test romanToArabicRepeatFourTest
  ck_assert_int_eq(roman_to_arabic("IIII"), ERROR);
  ck_assert_int_eq(roman_to_arabic("XXXX"), ERROR);
  ck_assert_int_eq(roman_to_arabic("CCCC"), ERROR);
  ck_assert_int_eq(roman_to_arabic("MMMM"), ERROR);

#test romanToArabicRepeatTwoTest
  ck_assert_int_eq(roman_to_arabic("VV"), ERROR);
  ck_assert_int_eq(roman_to_arabic("VVV"), ERROR);
  ck_assert_int_eq(roman_to_arabic("LL"), ERROR);
  ck_assert_int_eq(roman_to_arabic("DD"), ERROR);

#test romanToArabicTwoNextHighestValuesITest
  ck_assert_int_eq(roman_to_arabic("IX"), 9);
  ck_assert_int_eq(roman_to_arabic("IL"), ERROR);
  ck_assert_int_eq(roman_to_arabic("IC"), ERROR);
  ck_assert_int_eq(roman_to_arabic("ID"), ERROR);
  ck_assert_int_eq(roman_to_arabic("IM"), ERROR);

#test romanToArabicTwoNextHighestValuesXTest
  ck_assert_int_eq(roman_to_arabic("XL"), 40);
  ck_assert_int_eq(roman_to_arabic("XC"), 90);
  ck_assert_int_eq(roman_to_arabic("XD"), ERROR);
  ck_assert_int_eq(roman_to_arabic("XM"), ERROR);

#test romanToArabicTwoNextHighestValuesCTest
    ck_assert_int_eq(roman_to_arabic("CD"), 400);
    ck_assert_int_eq(roman_to_arabic("CM"), 900);

#test romanToArabicNoSubtractRuleVTest
  ck_assert_int_eq(roman_to_arabic("VX"), ERROR);
  ck_assert_int_eq(roman_to_arabic("VL"), ERROR);
  ck_assert_int_eq(roman_to_arabic("VC"), ERROR);
  ck_assert_int_eq(roman_to_arabic("VD"), ERROR);
  ck_assert_int_eq(roman_to_arabic("VM"), ERROR);

#test romanToArabicNoSubtractRuleLTest
  ck_assert_int_eq(roman_to_arabic("LC"), ERROR);
  ck_assert_int_eq(roman_to_arabic("LD"), ERROR);
  ck_assert_int_eq(roman_to_arabic("LM"), ERROR);

#test romanToArabicNoSubtractRuleDTest
  ck_assert_int_eq(roman_to_arabic("DM"), ERROR);

#test romanToArabicOneSubtractionTest
  ck_assert_int_eq(roman_to_arabic("XXC"), ERROR);

#test romanToArabicLongInvalidTest
    ck_assert_int_eq(roman_to_arabic("NI"), ERROR);

#test arabicToRomanBasicConversionTest
  ck_assert_str_eq(arabic_to_roman(1), "I");
  ck_assert_str_eq(arabic_to_roman(5), "V");
  ck_assert_str_eq(arabic_to_roman(10), "X");
  ck_assert_str_eq(arabic_to_roman(50), "L");
  ck_assert_str_eq(arabic_to_roman(100), "C");
  ck_assert_str_eq(arabic_to_roman(500), "D");
  ck_assert_str_eq(arabic_to_roman(1000), "M");

#test arabicToRomanAddCaseTest
  ck_assert_str_eq(arabic_to_roman(2), "II");
